apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: coredns
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2020-07-15T17:08:42Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: coredns
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: coredns
      helm.sh/chart: coredns-1.13.1
      k8s-app: coredns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: coredns
    namespace: kube-system
    resourceVersion: "2766486"
    selfLink: /apis/extensions/v1beta1/namespaces/kube-system/deployments/coredns-coredns
    uid: 6aa95415-c788-4723-ad93-fd9b7d4f5d45
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: coredns
        app.kubernetes.io/name: coredns
        k8s-app: coredns
    strategy:
      rollingUpdate:
        maxSurge: 10%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 0713e68ad8793328ae18e859a35c8153a671fb464a800a65b8e8cabbfbc47285
          scheduler.alpha.kubernetes.io/critical-pod: ""
          scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly",
            "operator":"Exists"}]'
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: coredns
          app.kubernetes.io/name: coredns
          k8s-app: coredns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: coredns/coredns:1.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: udp-53
            protocol: UDP
          - containerPort: 53
            name: tcp-53
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
        dnsPolicy: Default
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns-coredns
          name: config-volume
  status:
    conditions:
    - lastTransitionTime: "2020-07-15T17:09:31Z"
      lastUpdateTime: "2020-07-15T17:09:31Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-07-15T17:09:31Z"
      lastUpdateTime: "2020-07-15T17:09:33Z"
      message: ReplicaSet "coredns-coredns-7d75585d47" is progressing.
      reason: ReplicaSetUpdated
      status: "True"
      type: Progressing
    observedGeneration: 1
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""

